#!/usr/bin/env perl

use 5.24.0;
use warnings;
use DB_File;

my %all;
tie %all, 'DB_File', 'all.db';

my %graph;
my $current_node;

shift @ARGV if @ARGV == 1 and $ARGV[0] eq '-';
while (readline) {
    next if m/^\s*(?:#|\z)/;

    if (m/^(\w+)/) {
        $current_node = $1;
        next;
    }

    if (m/^\s+([a-z,]+)\s+(\w+)/) {
        die "no node set at $ARGV:$.\n" if !defined $current_node;
        my $chars     = $1;
        my $next_node = $2;
        for my $c ( split ',', $chars ) {
            push $graph{$current_node}->@*, [ $c, $next_node ];
        }
        next;
    }

    chomp;
    die "unknown line at $ARGV:$.: $_\n";
}

all_gismu();
#say rand_gismu();

warn "count=" . scalar( keys %all ) . "\n";

sub all_gismu {
    my $node  = shift // 'start';
    my $gismu = shift // '';

    for my $c ( $graph{$node}->@* ) {
        if ( !exists $graph{ $c->[1] } ) {
            my $final = $gismu . $c->[0];
            $all{"$final\0"} = 1;
            say $final;
        } else {
            all_gismu( $c->[1], $gismu . $c->[0] );
        }
    }
}

sub rand_gismu {
    my $node   = 'start';
    my $output = '';
    while ( exists $graph{$node} ) {
        my $choice = $graph{$node}->[ rand $graph{$node}->@* ];
        $output .= $choice->[0];
        $node = $choice->[1];
    }
    return $output;
}
